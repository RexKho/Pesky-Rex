{"version":3,"file":"main.js","mappings":"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","sources":["webpack://peskyrex/./src/drone.js","webpack://peskyrex/./src/poop.js","webpack://peskyrex/./src/rex.js","webpack://peskyrex/./src/index.js","webpack://peskyrex/./src/game.js"],"sourcesContent":["export default class Drone { \n    constructor(canvas, ctx, pos){\n        this.pos = pos;\n        this.width = 64;\n        this.height = 64;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.droneSprite = new Image();\n        this.droneSprite.src = \"src/images/dronev2.png\";\n    }\n\n    draw(){\n        this.ctx.drawImage(this.droneSprite, 0, 0, this.width, this.height, this.pos[0], this.pos[1], this.width, this.height);\n    }\n\n    move(){\n        this.pos[0] += this.randomNum();\n        this.pos[1] += this.randomNum();\n        if (this.pos[0] > 800) {\n            this.pos[0] = 800;\n        }\n        if (this.pos[0] < 0) {\n            this.pos[0] = 0;\n        }\n        if (this.pos[1] > 500) {\n            this.pos[1] = 500;\n        }\n        if (this.pos[1] < 0) {\n            this.pos[1] = 0;\n        }\n    \n\n\n    }\n\n    randomNum() {\n        return Math.ceil(Math.random() * 4) * (Math.round(Math.random()) ? 1 : -1);\n      }\n    \n\n}","export default class Poop {\n  constructor(ctx, pos){\n    this.ctx = ctx;\n    this.x = pos[0];\n    this.y = pos[1];\n    this.width = 50;\n    this.height = 50;\n    this.poopSprite = new Image();\n    this.poopSprite.src = \"src/images/poop.png\";\n  }\n  \n  draw(){\n    // console.log(this.pos)\n    this.ctx.drawImage(this.poopSprite, this.x-28, this.y, this.width, this.height);\n  }\n  \n}\n\n// export default class Poop {\n//   constructor(ctx, pos){\n//     this.pos = pos;\n//   }\n\n//   draw(ctx, width, height, pos0, pos1, width2, height2){\n//     // console.log(this);\n//     const poopSprite = new Image();\n//     poopSprite.src = \"src/images/poop.png\";\n//     ctx.drawImage(poopSprite, 0, 0, width, height, \n//         pos0, pos1, width2, height2);\n      \n\n// }\n\n// //code below was in rex class draw poop\n//         // const poopSprite = new Image();\n//         // poopSprite.src = \"src/images/poop.png\";\n//         // ctx.drawImage(poopSprite, 0, 0, that.width, that.height, \n//         //     that.pos[0], that.pos[1], that.width, that.height);\n\n// }","\n\nexport default class Rex {\n    constructor(canvas, ctx){\n        this.pos = [25,470];\n      \n        this.width = 32;\n        this.height = 32;\n   \n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.dogSprite = new Image();\n        this.dogSprite.src = \"src/images/dogwalking.png\";\n        \n \n            \n        }\n    \n                \n        draw(){\n            this.ctx.drawImage(this.dogSprite, 0, 0, this.width, this.height, this.pos[0], this.pos[1], this.width, this.height);\n        }\n                    \n        move(arr){\n                        // console.log('testing')\n            this.pos[0] += arr[0];\n            if (this.pos[0] < 0){\n                this.pos[0] = 0;\n            }\n            if (this.pos[0] > 780){\n                this.pos[0] = 760;\n            }\n\n            this.pos[1] += arr[1];\n            if (this.pos[1] < 0){\n                this.pos[1] = 0;\n            }\n            if (this.pos[1] > 480){\n                this.pos[1] = 460;\n            }\n                        // this.draw();\n        }\n}\n                    // import Poop from \"./poop\";\n                    \n                    // export default class Rex {\n                    //     constructor(ctx){\n                    //         this.pos = [25,470];\n                    //         this.vel = [0,0];\n                    //         // this.x = this.pos[0],\n                    //         // this.y = this.pos[1],\n                    //         this.width = 32;\n                    //         this.height = 32;\n                    //         this.frameX = 0;\n                    //         this.frameY = 0;\n                    //         this.speed = 10;\n                    //         this.moving = false;\n                    \n                    //         this.ctx = ctx;\n                    //         // this.pooped = new Set([]);\n                    \n                    //         // let dogImg = {\n                    //         //     x: this.pos[0],\n                    //         //     y: this.pos[1],\n                    //         //     width: 32,\n                    //         //     height: 32,\n                    //         //     frameX: 0,\n                    //         //     frameY: 0,\n                    //         //     speed: 9,\n                    //         //     moving: false\n                    //         // }\n                    \n                    //         // const dogSprite = new Image();\n                    //         // dogSprite.src = \"src/images/dogwalking.png\";\n                    \n                    //     }\n                    \n                    //     // drawSprite(ctx, sX, sY, sW, sH, dX, dY, dW, dH){\n                    //     //     const dogSprite = new Image();\n                    //     //     dogSprite.src = \"src/images/dogwalking.png\";\n                    //     //     ctx.drawImage(dogSprite, sX, sY, sW, sH, dX, dY, dW, dH);\n                    //     // }\n                    \n                    //     drawPoop(ctx){\n                    //         let that = this;\n                    //         let poop = new Poop(ctx, that.pos);\n                    //         // this.pooped.add(that.pos);\n                    //         // console.log(this.pooped);\n                            \n                    //         poop.draw(ctx, that.width, that.height, that.pos[0], that.pos[1], that.width, that.height);\n                    //     }\n                    \n                    //     drawPreviousPoop(ctx, loc){\n                    //         let that = this;\n                    //         let poop = new Poop(ctx, that.pos);\n                    //         poop.draw(ctx, that.width, that.height, loc[0], loc[1], that.width, that.height);\n                    //     }\n                    \n                    //     draw(ctx){\n                    //         // console.log(this);\n                    //         // ctx.beginPath();\n                    //         // ctx.rect(this.pos[0], this.pos[1], 20, 10);\n                            \n                    //         // ctx.fillStyle = this.color;\n                    //         // ctx.stroke();\n                    //         let that = this;\n                            \n                    //         const dogSprite = new Image();\n                    //         dogSprite.src = \"src/images/dogwalking.png\";\n                    //         ctx.drawImage(dogSprite, 0, 0, that.width, that.height, \n                    //             that.pos[0], that.pos[1], that.width, that.height);\n                    //             // console.log(that.pooped[1])\n                               \n                    //     }\n                    \n                    //     direction(arr, ctx){\n                    //         this.vel[0] += arr[0];\n                    //         this.vel[1] += arr[1];\n                    //         // console.log(this.pos);\n                    //         this.move(ctx);\n                    //         this.vel[0] = 0;\n                    //         this.vel[1] = 0;\n                    //         // console.log(this.vel);\n                    //     }\n                    \n                    //     move(ctx){\n                            \n                    //         this.pos[0] += this.vel[0];\n                    //         this.pos[1] += this.vel[1];\n                    //         this.draw(ctx);\n                    //     }\n                    // }\n","import Game from \"./game\";\n// import MovingObject from \"./moving_object\";\n\nlet modal = document.getElementById('simpleModal');\nlet modalBtn = document.getElementById('modalBtn');\nlet closeBtn = document.getElementsByClassName('closeBtn')[0];\n\nmodalBtn.addEventListener('click', openModal);\ncloseBtn.addEventListener('click', closeModal);\nwindow.addEventListener('click', clickOutside);\n\nfunction openModal(){\n    modal.style.display = 'flex';\n}\n\nfunction closeModal(){\n    modal.style.display = 'none';\n}\n\nfunction clickOutside(e){\n    if (e.target === modal){\n    modal.style.display = 'none';\n    }\n}\n\nlet fart = new Audio();\nfart.volume = 1;\nfart.src = \"src/audio/fart.mp3\"\n\nlet mute = false;\nlet song = new Audio();\nsong.src = \"src/audio/song.mp3\";\nsong.loop = true;\nsong.volume = .5;\n\nlet MuteButton = document.getElementById('MuteButton');\nMuteButton.addEventListener('click', toggleMute);\n\nfunction toggleMute(){\n    if(!mute){\n        mute = true;\n        song.volume = 0;\n        fart.volume = 0;\n    } else if (mute){\n        mute = false;\n        song.volume = .5;\n        fart.volume = 1;\n    }\n}\n\nconst canvas = document.getElementById(\"canvas1\");\nconst ctx = canvas.getContext('2d');\n\nlet game = new Game(canvas, ctx);\n\nconst startDiv = document.getElementById(\"start\");\nstartDiv.addEventListener('click', function(){\n    song.play();\n    game.gamestart();\n    \n})\n\nconst endDiv = document.getElementById(\"endLost\");\nendDiv.addEventListener('click', function(){\n    game.gamestart();\n    \n})\nconst endDiv2 = document.getElementById(\"endWon\");\nendDiv2.addEventListener('click', function(){\n    game.gamestart();\n    \n})\n\nfunction keyDown(e) {\n    e.preventDefault();\n    if (e.key === 'w') {\n        game.rex.move([0,-10]);\n    }\n    if (e.key === 'a') {\n        game.rex.move([-10,0]);\n    }\n    if (e.key === 's') {\n        game.rex.move([0, 10]);\n    }\n    if (e.key === 'd') {\n        game.rex.move([10,0]);\n    }\n    if (e.keyCode === 32) {\n        game.addPoop();\n        fart.play();\n    }\n    if (e.key === 'p') {\n        game.togglePause();\n    }\n}\n\n\ndocument.addEventListener(\"keydown\", keyDown);\n\n","import Drone from \"./drone\";\nimport Poop from \"./poop\";\nimport Rex from \"./rex\";\n\nexport default class Game {\n    constructor(canvas, ctx) {\n        this.background = new Image();\n        this.background.src=\"src/images/background.png\";\n        // this.keys = [];\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.rex = new Rex(canvas, ctx);\n        this.pooped = new Set([]);\n        this.winYet = false;\n        this.drone1 = new Drone(canvas, ctx, [735,85]);\n        this.drone2 = new Drone(canvas, ctx, [450,270]);\n        this.drone3 = new Drone(canvas, ctx, [300,55]);\n        this.drone4 = new Drone(canvas, ctx, [711,320]);\n        this.paused = false;\n    \n    }\n\n    togglePause(){\n        if(!this.paused){\n            this.paused = true;\n        } else if (this.paused){\n            this.paused = false;\n        }\n    }\n\n    \n\n    dist(obj1, obj2) {\n        return Math.sqrt((obj1.pos[0] - obj2.pos[0])**2 + (obj1.pos[1] - obj2.pos[1])**2);\n    }\n\n    collided(obj1, obj2){\n        if(((obj1.width + obj2.width)/2) > this.dist(obj1, obj2)){\n            return true;\n        }\n        if(((obj1.height + obj2.height)/2) > this.dist(obj1, obj2)){\n            return true;\n        }\n        return false;\n    }\n\n    reset(canvas,ctx){\n        this.rex = new Rex(canvas, ctx);\n        this.pooped = new Set([]);\n        this.drone1 = new Drone(canvas, ctx, [735,85]);\n        this.drone2 = new Drone(canvas, ctx, [450,270]);\n        this.drone3 = new Drone(canvas, ctx, [300,55]);\n        this.drone4 = new Drone(canvas, ctx, [711,320]);\n        this.winYet = false;\n    }\n    \n    gamestart(){\n        this.reset(this.canvas, this.ctx);\n        this.paused = false;\n        let startDiv = document.getElementById(\"start\");\n        let gameCanvas = document.getElementById(\"canvas1\");\n        let endLost = document.getElementById(\"endLost\");\n        let endWon = document.getElementById(\"endWon\");\n        startDiv.style.display = \"none\";\n        gameCanvas.style.display = \"block\";\n        endLost.style.display = \"none\";\n        endWon.style.display = \"none\";\n        this.animate();\n    }\n\n    endgame() {\n        \n        let startDiv = document.getElementById(\"start\");\n        let gameCanvas = document.getElementById(\"canvas1\");\n        let endLost = document.getElementById(\"endLost\");\n        let endWon = document.getElementById(\"endWon\");\n        startDiv.style.display = \"none\";\n        gameCanvas.style.display = \"none\";\n\n        if(this.winYet === false){\n            endLost.style.display = \"block\";\n            endWon.style.display = \"none\";\n        } else {\n            endWon.style.display = \"block\";\n            endLost.style.display = \"none\";\n        }\n        this.paused = true;\n        this.winYet = false;\n    }\n\n\n    \n    addPoop(){\n        let poop = new Poop(this.ctx, this.rex.pos);\n        this.pooped.add(poop);\n        // console.log(this.pooped);\n        // console.log(this.poopLocations)\n    }\n\n    gamechecker(){\n        let count = [false, false, false, false, false, false];\n        this.pooped.forEach(ele => {\n            if (ele.x >= 114 && ele.x <= 261){\n                if (ele.y >= 225 && ele.y <= 415){\n                    count[0] = true;\n                }\n            }\n            if (ele.x >= 266 && ele.x <= 604){\n                if (ele.y >= 225 && ele.y <= 415){\n                    count[1] = true;\n                }\n            }\n            if (ele.x >= 607 && ele.x <= 798){\n                if (ele.y >= 225 && ele.y <= 415){\n                    count[2] = true;\n                }\n            }\n            if (ele.x >= 113 && ele.x <= 365){\n                if (ele.y >= 3 && ele.y <= 154){\n                    count[3] = true;\n                }\n            }\n            if (ele.x >= 368 && ele.x <= 634){\n                if (ele.y >= 0 && ele.y <= 154){\n                    count[4] = true;\n                }\n            }\n            if (ele.x >= 636 && ele.x <= 799){\n                if (ele.y >= 0 && ele.y <= 154){\n                    count[5] = true;\n                }\n            }\n        })\n\n        \n        let that = this;\n        if (count.every(ele => ele === true)){\n            // alert(\"you won the game!\")\n            that.winYet = true;\n\n        }\n        \n        \n    }\n\n    movedrones(){\n        this.drone1.draw();\n        this.drone1.move();\n        this.drone2.draw();\n        this.drone2.move();\n        this.drone3.draw();\n        this.drone3.move();\n        this.drone4.draw();\n        this.drone4.move();\n    }\n\n    rexCollideWithDrones(){\n        if (this.collided(this.rex, this.drone1)){\n            return true;\n        }\n        if (this.collided(this.rex, this.drone2)){\n            return true;\n        }\n        if (this.collided(this.rex, this.drone3)){\n            return true;\n        }\n        if (this.collided(this.rex, this.drone4)){\n            return true;\n        }\n        return false;\n    }\n    \n    animate(){\n        if (!this.paused){\n        this.ctx.clearRect(0,0,800,500);\n        // this.background.onload = () => {\n            //     this.ctx.drawImage(this.background, 0, 0, 800, 500)\n            // };\n            this.ctx.drawImage(this.background, 0, 0, 800, 500);\n            this.rex.draw();\n            this.gamechecker();\n            this.movedrones();\n            for (let poop of this.pooped) {\n                poop.draw()\n            }\n            if(this.winYet === true){\n                this.endgame();\n            }\n            // console.log(thix.rexCollideWithDrones)\n            if(this.rexCollideWithDrones() === true){\n                this.endgame();\n            }\n        }\n        requestAnimationFrame(this.animate.bind(this));\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // import MovingObject from \"./moving_object\";\n        \n        // import Rex from \"./rex\";\n        \n        \n        // const background = new Image();\n        // background.src=\"src/images/background.png\";\n        \n        // export default class Game {\n        //     constructor(canvas) {\n        //         this.keys = [];\n        //         this.canvas = canvas;\n        //         this.width = canvas.width;\n        //         this.height = canvas.height;\n               \n        //         this.rex = new Rex(canvas);\n        \n        //         this.poopedLocations = [];\n        //     }\n            \n        //     gamestart(ctx){\n                \n        //         let that = this;\n        //         // window.addEventListener(\"keydown\", function(e){\n        //         //     that.keys[e.key] = true;\n        //         //     console.log(e.key);\n        //         // })\n        \n        //         // window.addEventListener(\"keyup\", function(e){\n        //         //     that.keys[e.key] = false;\n        //         //     // console.log(that.keys);\n        //         // })\n               \n        //         // this.rex.draw(ctx);\n        //         ctx.drawImage(background, 0, 0, 800, 500);\n        //         this.animate(ctx);\n        //         // maybe sounds will go here too;\n                \n        //     }\n        \n        //     // movePLayer(){\n        //     //     if (this.keys[]) {\n        //     //         this.rex.direction([0,-10], conn);\n        //     //     }\n        //     // }\n        \n        //     poopLocations(ctx){\n        //         let conn = ctx;\n        //         let that = this;\n        //         this.poopedLocations.forEach( function(ele) {\n        //             that.rex.drawPreviousPoop(conn, ele);\n        //         })\n        //         // if (that.rex.pooped.length > 0) {\n        //         //     for(let i =0; i < that.rex.pooped.length; i++){\n        //         //         const poopSprite = new Image();\n        //         //         poopSprite.src = \"src/images/poop.png\";\n        //         //         conn.drawImage(poopSprite, 0, 0, that.width, that.height, \n        //         //             that.pos[0], that.pos[1], that.width, that.height);\n                            \n        //         //     }\n        //         // }\n        //     }\n        \n        //     animate(ctx){\n                \n        //         let that = this;\n        //         ctx.clearRect(0,0,800,600);\n        //         ctx.drawImage(background, 0, 0, 800, 500);\n        //         this.poopLocations(ctx);\n        //         this.rex.draw(ctx);\n                \n        //         that.bindKeys(ctx);\n        //         // this.movePLayer();\n        //         // console.log(this.rex);\n                \n               \n                \n        //         setTimeout(()=> {\n        //             requestAnimationFrame(this.animate.bind(this, ctx));\n        \n        //         },144);\n               \n        //     }\n        \n        //     bindKeys(ctx){\n        //         let conn = ctx;\n        //         let that = this;\n        //         // key('w', function(){console.log(that.rex.poopLocations)});\n        //         key('w', function(){that.rex.direction([0,-1], conn)});\n        //         key('s', function(){that.rex.direction([0,1], conn)});\n        //         key('a', function(){that.rex.direction([-1,0], conn)});\n        //         key('d', function(){that.rex.direction([1,0], conn)});\n        //         key('space', function(){\n        //             that.rex.drawPoop(conn);\n        //             let newarr = new Array();\n        //             newarr.push(that.rex.pos[0]);\n        //             newarr.push(that.rex.pos[1]);\n        //             that.poopedLocations.push(newarr);\n        //             console.log(that.poopedLocations);\n        //         });\n        //     }\n        \n        \n        \n         \n        \n        // }\n"],"names":["Drone","constructor","canvas","ctx","pos","this","width","height","droneSprite","Image","src","draw","drawImage","move","randomNum","Math","ceil","random","round","Poop","x","y","poopSprite","Rex","dogSprite","arr","modal","document","getElementById","modalBtn","closeBtn","getElementsByClassName","addEventListener","style","display","window","e","target","fart","Audio","volume","mute","song","loop","getContext","game","background","rex","pooped","Set","winYet","drone1","drone2","drone3","drone4","paused","togglePause","dist","obj1","obj2","sqrt","collided","reset","gamestart","startDiv","gameCanvas","endLost","endWon","animate","endgame","addPoop","poop","add","gamechecker","count","forEach","ele","every","movedrones","rexCollideWithDrones","clearRect","requestAnimationFrame","bind","play","preventDefault","key","keyCode"],"sourceRoot":""}